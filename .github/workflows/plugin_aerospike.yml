name: aerospike
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        format:
          - "default"
    steps:
    - name: Clone stanza-plugins
      uses: actions/checkout@v2

    - name: Clone Log Library
      uses: actions/checkout@v2
      with:
        repository: 'observIQ/log-library'
        path: log-library
        token: ${{ secrets.LOG_LIBRARY_ACCESS_TOKEN }}
        ref: otel

    - name: Create Output Directory
      run: mkdir output

    - name: Create Offset Database Directory
      run: mkdir -p storage

    - name: Clone Collector
      uses: actions/checkout@v2
      with:
        repository: 'observIQ/observiq-collector'
        path: observiq-collector
        token: ${{ secrets.LOG_LIBRARY_ACCESS_TOKEN }}
        fetch-depth: 0

    - name: Set up Go 1.17
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build and Install latest Collector release
      run: |
        latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
        git checkout $latestTag
        make install-tools
        make collector
      working-directory: observiq-collector

    - name: Run Agent
      run: |
        docker run -d \
          --name agent \
          -v $(pwd)/observiq-collector/dist/collector_linux_amd64:/collector \
          -v $(pwd)/log-library/cases/${GITHUB_WORKFLOW}/${{ matrix.format }}:/input \
          -v $(pwd)/output:/output \
          -v $(pwd)/plugins:/plugins \
          -v $(pwd)/storage:/storage \
          --entrypoint sh \
          ubuntu:20.04 \
          -c '/collector/collector --config /input/config/collector.yaml'
        
        sleep 1 && docker logs agent

    - name: Pause
      run: sleep 10

    - name: Stop Stanza
      run: docker kill agent

    - name: Dump Stanza Logs
      run: docker logs agent

    - name: Get Output
      run: |
        sudo cat output/out