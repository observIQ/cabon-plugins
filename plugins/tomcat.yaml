version: 0.0.9
title: Apache Tomcat
description: Log parser for Apache Tomcat
supported_platforms: 
  - linux
  - windows
  - macos
  - kubernetes
parameters:
  - name: source
    label: Log source
    description: Where the logs are coming from
    type: enum
    valid_values:
      - file
      - kubernetes
    default: file
  - name: pod_name
    label: Pod Name
    description: The pod name (without the unique identifier on the end)
    type: string
    required: true
    relevant_if:
      source:
        equals: kubernetes
  - name: container_name
    label: Container Name
    description: The container name of the Nginx container
    type: string
    default: "*"
    relevant_if:
      source:
        equals: kubernetes
  - name: enable_access_log
    label: Access Logs
    description: Enable to collect Apache Tomcat access logs
    type: bool
    default: true
  - name: access_log_path
    label: Access Log Path
    description: Path to access log file
    type: string
    default: "/usr/local/tomcat/logs/localhost_access_log.*.txt"
    relevant_if:
      source:
        equals: file
      enable_access_log:
        equals: true
  - name: enable_catalina_log
    label: Catalina Logs
    description: Enable to collect Apache Tomcat catalina logs
    type: bool
    default: true
  - name: catalina_log_path
    label: Catalina Log Path
    description: Path to catalina log file
    type: string
    default: "/usr/local/tomcat/logs/catalina.out"
    relevant_if:
      source:
        equals: file
      enable_catalina_log:
        equals: true
  - name: start_at
    label: Start At
    description: Start reading file from 'beginning' or 'end'
    type: enum
    valid_values:
     - beginning
     - end
    default: end
  - name: log_format
    label: Log Format
    description: |2
      Default is unmodifed log_format settings for Apache HTTP

      Observiq expects the following format. This format will generate a json log entry. This log_format can be modified to meet your requirements as long as key names do not change and it is valid json.
    type: enum
    valid_values:
      - default
      - observiq
    default: default
# Set Defaults
# {{$source := default "file" .source}}
# {{$pod_name := .pod_name}}
# {{$container_name := default "*" .container_name}}
# {{$enable_access_log := default true .enable_access_log}}
# {{$access_log_path := default "/usr/local/tomcat/logs/localhost_access_log.*.txt" .access_log_path}}
# {{$enable_catalina_log := default true .enable_catalina_log}}
# {{$catalina_log_path := default "/usr/local/tomcat/logs/catalina.out" .catalina_log_path}}
# {{$start_at := default "end" .start_at}}
# {{$log_format := default "default" .log_format}}

# Pipeline Template
pipeline:
  # {{ if eq $source "kubernetes" }}
  - id: kubernetes_input
    type: kubernetes_container
    pod_name: '{{ $pod_name }}'
    container_name: '{{ $container_name }}'
    start_at: '{{ $start_at }}'

  - id: k8s_input_router
    type: router
    routes:
      # {{ if $enable_access_log }}
      - expr: "$labels.stream == 'stdout'"
        output: access_regex_parser
        labels:
          log_type: 'tomcat.access'
          plugin_id: '{{ .id }}'
      # {{ end }}
      # {{ if $enable_catalina_log }}
      # TODO: Update expression
      - expr: '$labels.stream == "stderr" and $record.message matches "\\d{4}\\/\\d{2}\\/\\d{2} \\d{2}:\\d{2}:\\d{2} \\[\\w+\\] \\d+\\.\\d+: "'
        output: catalina_regex_parser
        labels:
          log_type: 'tomcat.catalina'
          plugin_id: '{{ .id }}'
      # {{ end }}
  # {{ end }}
  #{{ if and $enable_access_log (eq $source "file") }}
  - id: tomcat_access_reader
    type: file_input
    include:
      - {{ $access_log_path }}
    start_at: {{ $start_at }}
    labels:
      log_type: 'tomcat.access'
      plugin_id: {{ .id }}
    output: access_regex_parser
  # {{ end }}

  # {{ if $enable_access_log }}
  - id: access_regex_parser
    type: regex_parser
    regex: '(?P<remote_host>[^\s]+) - (?P<remote_user>[^\s]+) \[(?P<timestamp>[^\]]+)\] "(?P<http_method>[A-Z]+) (?P<path>[^\s]+)[^"]+" (?P<http_status>\d+) (?P<bytes_sent>[^\s]+)'
    timestamp:
      parse_from: timestamp
      layout: '%d/%b/%Y:%H:%M:%S %z'
    severity:
      parse_from: http_status
      preserve_to: http_status
      mapping:
        info: 2xx
        notice: 3xx
        warning: 4xx
        error: 5xx
    output: {{ .output }}
  #{{ end }}

  #{{ if $enable_catalina_log }}
  - id: tomcat_catalina_reader
    type: file_input
    include:
      - {{ $catalina_log_path }}
    start_at: {{ $start_at }}
    multiline:
      line_start_pattern: '[0-9]{2}-[A-Za-z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}'
    labels:
      log_type: 'tomcat.catalina'
      plugin_id: {{ .id }}
    output: catalina_regex_parser

  - id: catalina_regex_parser
    type: regex_parser
    regex: '(?P<timestamp>[0-9]{2}-[A-Za-z]{3}-[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3})\s(?P<tomcat_severity>[A-Z]*)\s\[(?P<thread>[\w]*)\]\s(?P<tc_source>[^ ]*)\s(?P<message>[\s\S]+)'
    timestamp:
      parse_from: timestamp
      layout: '%d-%b-%Y %H:%M:%S.%L'
    severity:
      parse_from: tomcat_severity
      mapping:
        notice: config
        emergency: severe
        debug:
          - fine
          - finer
          - finest
    output: {{ .output }}
  #{{ end }}
