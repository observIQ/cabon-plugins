version: 0.0.8
title: MongoDB
description: Log parser for MongoDB
supported_platforms:
  - linux
  - windows
  - kubernetes
parameters:
  - name: source
    label: Log source
    description: Use this field to specify where your logs are coming from. When choosing the 'file' option, the agent reads in logs from the log paths specified below.  When choosing the 'Kubernetes' options, the agent reads logs from /var/log/containers based on the Pod and Container specified below.
    type: enum
    valid_values:
      - file
      - kubernetes
    default: file
  - name: cluster_name
    label: Cluster Name
    description: 'Cluster Name to be added to a resource label'
    type: string
    default: ""
    relevant_if:
      source:
        equals: kubernetes
  - name: pod_name
    label: Pod Name
    description: The pod name (without the unique identifier on the end)
    type: string
    default: 'mongodb'
    required: true
    relevant_if:
      source:
        equals: kubernetes
  - name: container_name
    label: Container Name
    description: The container name of the Mongodb container
    type: string
    default: "*"
    relevant_if:
      source:
        equals: kubernetes
  - name: log_path
    label: Path
    description: The path of the log file
    type: string
    default: "/var/log/mongodb/mongodb.log*"
    relevant_if:
      source:
        equals: file
  - name: mongodb_json_log_format
    label: "MongoDB 4.4+ Log Format"
    description: Enable to parse MongoDB 4.4+ JSON log format parsing.
    type: bool
    default: false
  - name: start_at
    label: Start At
    description: Start reading file from 'beginning' or 'end'
    type: enum
    valid_values:
     - beginning
     - end
    default: end

# Set Defaults
# {{$source := default "file" .source}}
# {{$cluster_name := default "" .cluster_name}}
# {{$pod_name := default "mongodb-*" .pod_name}}
# {{$container_name := default "*" .container_name}}
# {{$log_path := default "/var/log/mongodb/mongodb.log*" .log_path}}
# {{$mongodb_json_log_format := default false .mongodb_json_log_format}}
# {{$start_at := default "end" .start_at}}

# Pipeline Template
pipeline:
  # {{ if eq $source "kubernetes" }}
  - id: kubernetes_input
    type: kubernetes_container
    pod_name: '{{ $pod_name }}'
    container_name: '{{ $container_name }}'
    cluster_name: '{{ $cluster_name }}'
    start_at: '{{ $start_at }}'
    enable_nested_json_parser: false
    # {{ if $mongodb_json_log_format }}
    output: json_parser
    # {{ else }}
    output: regex_parser
    # {{ end }}
  # {{ end }}


  # {{ if eq $source "file" }}
  - id: file_input
    type: file_input
    include:
      - '{{ $log_path }}'
    exclude:
      - '{{ $log_path }}*.gz'
    start_at: '{{ $start_at }}'
    labels:
      log_type: 'mongodb'
      plugin_id: {{ .id }}
    # {{ if $mongodb_json_log_format }}
    output: json_parser
    # {{ else }}
    output: regex_parser
    # {{ end }}
  # {{ end }}

  - id: regex_parser
    type: regex_parser
    regex: '^(?P<timestamp>\S+)\s+(?P<severity>\w+)\s+(?P<component>[\w-]+)\s+\[(?P<context>\S+)\]\s+(?P<message>.*)$'
    timestamp:
      parse_from: timestamp
      #2019-02-06T09:22:43.967-0500
      layout: '%Y-%m-%dT%H:%M:%S.%f%z'
    severity:
      parse_from: severity
      mapping:
        critical: F
        error: E
        warning: W
        info: I
        debug:
          - D
          - D1
          - D2
          - D3
          - D4
          - D5
    output: {{ .output }}

  - id: json_parser
    type: json_parser
    parse_from: $record
    timestamp:
      parse_from: $record.t.$date
      #2020-11-03T14:24:07.436-05:00
      layout: '%Y-%m-%dT%H:%M:%S.%f%j'
    severity:
      parse_from: s
      mapping:
        critical: F
        error: E
        warning: W
        info: I
        debug:
          - D
          - D1
          - D2
          - D3
          - D4
          - D5
    output: restructure_log_entry

  - id: restructure_log_entry
    type: restructure
    ops:
      - remove: $record.t
      - move:
          from: '$record.c'
          to: '$record.component'
      - move:
          from: '$record.ctx'
          to: '$record.context'
      - move:
          from: '$record.msg'
          to: '$record.message'
    output: {{ .output }}
